#!/usr/bin/env bash

set -e
set -v

cd `dirname $0`/..
. smc-env

# all module directories
. cocalc-dirs.sh

# we move and delete node_modules in parallel of npm ci to speed up install
for dir in "${CODE_DIRS[@]}"; do
    cd "$dir"
    echo "cleanup $(basename $dir)"
    # get rid of leftovers in case this got interrupted
    rm -rf node_modules.delme/
    if [[ -d node_modules/ ]]; then
        mv -v node_modules node_modules.delme
    fi
done

cd $SMC_ROOT
find -type d -name node_modules.delme | xargs rm -rf &

# npm ci install function, will run in parallel if gnu parallel is installed
run_install() {
    cd "$1"
    # ts is part of moreutils
    if `hash ts 2> /dev/null`; then
        npm ci | ts "[%Y-%m-%d %H:%M:%S|$(basename $1)]"
    else
        npm ci
    fi
}

if `hash parallel 2> /dev/null`; then

    export -f run_install
    parallel --will-cite --halt now,fail=1 --linebuffer --jobs 3 run_install ::: "${CODE_DIRS[@]}"

else

    for dir in "${CODE_DIRS[@]}"; do
        run_install "$dir"
    done

fi


# after everything is installed, we run some extra jobs


assistant() {
    # assistant example code snippets
    cd $SMC_ROOT
    git submodule update --init
    cd $SMC_ROOT/examples
    env OUTDIR=../webapp-lib/examples make
}

colors() {
    # generating color scheme
    cd $SMC_ROOT
    scripts/update_color_scheme.coffee
}

react_static() {
    # static react pages update must come *before* webpack
    cd $SMC_ROOT
    update_react_static
}

webapp_res_setup() {
    cd $SMC_ROOT
    python3 webapp-lib/res/setup.py
}

# run extras in the background
assistant &
colors &
react_static &
webapp_res_setup &

wait # for all background processes to finish
echo "ALL DONE"