#!/usr/bin/env python3

"""
This is just meant to be a quick and dirty python script so I can run other
scripts (e.g., a unit test runner) to get a sense if they are flaky or not.:

runoo 20 python test.py  # runs "python test.py" 20 times in parallel, ncpus at once

"""

import sys, os, time
from concurrent.futures import ProcessPoolExecutor, as_completed
import multiprocessing

failed = False
def run_cmd(cmd, i):
    global failed
    if failed:
        return
    print('\n'*5)
    print('*'*60)
    print(f'* Loop: {i+1}/{n} , Time: {round(time.time() - start)}, Command: {cmd}')
    print('*'*60)
    if os.system(cmd):
        failed = True
        print('\n'*5)
        print('*'*60)
        print(f'* Command failed on run {i+1}**')
        print('*'*60)
        print('\n'*5)
        sys.exit(1);

if __name__ == '__main__':
    n = int(sys.argv[1])
    cmd = ' '.join(sys.argv[2:])
    k = multiprocessing.cpu_count()
    start = time.time()

    with ProcessPoolExecutor(max_workers=k) as executor:
        futures = [executor.submit(run_cmd, cmd, i) for i in range(n)]
        for f in as_completed(futures):
            f.result()  # Raises exception if failed

    print('\n'*5)
    print('*'*60)
    print(f"Successfully ran {n} times")
    print('*'*60)
    