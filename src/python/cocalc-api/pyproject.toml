[project]
name = "cocalc-api"
version = "0.5.0"
description = "Python client for the CoCalc API"
authors = [{ name="William Stein", email="wstein@sagemath.com" }, {name="Harald Schilly", email="hsy@sagemath.com"}]
readme = "README.md"
requires-python = ">=3.9"
dependencies = ["httpx"]
license = "MIT"

[tool.hatch.build.targets.wheel]
packages = ["src/cocalc_api"]
include = ["src/cocalc_api/py.typed"]

[project.urls]
Homepage = "https://github.com/sagemathinc/cocalc/src/python/cocalc-api"
Repository = "https://github.com/sagemathinc/cocalc"
Documentation = "https://cocalc.com/api/python"
Source = "https://github.com/sagemathinc/cocalc/src/python/cocalc-api"
Issues = "https://github.com/sagemathinc/cocalc/issues"

[tool.mypy]
python_version = "3.13"
# strict = true
# disallow_untyped_defs = true
# Ignore empty-body errors for decorator-implemented methods
disable_error_code = ["empty-body"]

[tool.pyright]
# Ignore return type errors for decorator-implemented methods
reportReturnType = false

[tool.yapf]
based_on_style = "pep8"
column_limit = 150
indent_width = 4

[tool.ruff]
line-length = 150
lint.select = ["E", "F", "B"]  # Pyflakes, pycodestyle, bugbear, etc.

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 1

[tool.coverage.html]
directory = "htmlcov"

[dependency-groups]
dev = [
    "coverage[toml]",
    "ipython",
    "mkdocs",
    "mkdocs-material",
    "mkdocstrings[python]",
    "mypy",
    "psycopg2-binary",
    "pyright",
    "pytest-cov",
    "pytest>=8.4.2",
    "ruff>=0.13.2",
    "types-psycopg2",
    "yapf",
]
